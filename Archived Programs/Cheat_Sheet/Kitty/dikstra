struct compare  
 {  
   bool operator()(const pair<ll,ll>& l, const pair<ll,ll>& r)  
   {  
       return l.first > r.first;  
   }  
 };

int dist[100002];
    for(int i=0;i<100002;i++)
      dist[i]=100000000;


//input-
vector<pair<int,int> >v[100002];
 for(int i=0;i<m;i++)
 {       
      scanf("%d%d%d",&h,&x,&y);
 
      v[h].pb(mp(x,y));
      v[x].pb(mp(h,y));
 }

//over


   priority_queue<pair<int,int> ,vector<pair<int,int> >,compare>p;
 
 
   p.push(mp(0,src));
 
   while(!p.empty())
         {
            
            x=p.top().fir;
 
            y=p.top().sec;
 
            p.pop();
            
            if(x>dist[y])
               continue;
 
            
            if(y==dest)
            {
               printf("%d\n",x);f=1;
               break;
            }
 
         	for(int i=0;i<v[y].size();i++)
            	{
               		if(x+v[y][i].sec<dist[v[y][i].fir])
		       		{
		          		dist[v[y][i].fir]=x+v[y][i].sec;
		          		p.push(mp(dist[v[y][i].fir],v[y][i].fir));
		       		}  
            	}	
 
         }  
